layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "label"
  python_param {
    module: "multilabel_layer"
    layer: "MultilabelDataLayerSync"
    param_str: "{\'im_shape\': [128, 128], \'label_num\': 99, \'project_root\': \'../', \'batch_size\': 20, \'split\': \'train\'}"
  }
}
layer {
  bottom: "data"
  top: "conv1_1"
  name: "conv1_1"
  type: "Convolution"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  bottom: "conv1_1"
  top: "conv1_1"
  name: "relu1_1"
  type: "ReLU"
}
layer {
  bottom: "conv1_1"
  top: "conv1_2"
  name: "conv1_2"
  type: "Convolution"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  bottom: "conv1_2"
  top: "conv1_2"
  name: "relu1_2"
  type: "ReLU"
}
layer {
  bottom: "conv1_2"
  top: "pool1"
  name: "pool1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool1"
  top: "conv2_1"
  name: "conv2_1"
  type: "Convolution"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  bottom: "conv2_1"
  top: "conv2_1"
  name: "relu2_1"
  type: "ReLU"
}
layer {
  bottom: "conv2_1"
  top: "conv2_2"
  name: "conv2_2"
  type: "Convolution"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  bottom: "conv2_2"
  top: "conv2_2"
  name: "relu2_2"
  type: "ReLU"
}
layer {
  bottom: "conv2_2"
  top: "pool2"
  name: "pool2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool2"
  top: "conv3_1"
  name: "conv3_1"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  bottom: "conv3_1"
  top: "conv3_1"
  name: "relu3_1"
  type: "ReLU"
}
layer {
  bottom: "conv3_1"
  top: "conv3_2"
  name: "conv3_2"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  bottom: "conv3_2"
  top: "conv3_2"
  name: "relu3_2"
  type: "ReLU"
}
layer {
  bottom: "conv3_2"
  top: "conv3_3"
  name: "conv3_3"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  bottom: "conv3_3"
  top: "conv3_3"
  name: "relu3_3"
  type: "ReLU"
}
layer {
  bottom: "conv3_3"
  top: "pool3"
  name: "pool3"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool3"
  top: "conv4_1"
  name: "conv4_1"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  bottom: "conv4_1"
  top: "conv4_1"
  name: "relu4_1"
  type: "ReLU"
}
layer {
  bottom: "conv4_1"
  top: "conv4_2"
  name: "conv4_2"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  bottom: "conv4_2"
  top: "conv4_2"
  name: "relu4_2"
  type: "ReLU"
}
layer {
  bottom: "conv4_2"
  top: "conv4_3"
  name: "conv4_3"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  bottom: "conv4_3"
  top: "conv4_3"
  name: "relu4_3"
  type: "ReLU"
}
layer {
  bottom: "conv4_3"
  top: "pool4"
  name: "pool4"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool4"
  top: "conv5_1"
  name: "conv5_1"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  bottom: "conv5_1"
  top: "conv5_1"
  name: "relu5_1"
  type: "ReLU"
}
layer {
  bottom: "conv5_1"
  top: "conv5_2"
  name: "conv5_2"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  bottom: "conv5_2"
  top: "conv5_2"
  name: "relu5_2"
  type: "ReLU"
}
layer {
  bottom: "conv5_2"
  top: "conv5_3"
  name: "conv5_3"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  bottom: "conv5_3"
  top: "conv5_3"
  name: "relu5_3"
  type: "ReLU"
}
layer {
  bottom: "conv5_3"
  top: "pool5"
  name: "pool5"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool5"
  top: "fc6_"
  name: "fc6_"
  type: "InnerProduct"
  inner_product_param {
    num_output: 4096
  
  weight_filler{
  	type: "xavier"
  }
  bias_filler{
  	type: "xavier"
  }
  }
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 1
  }
}
layer {
  bottom: "fc6_"
  top: "fc6_"
  name: "relu6"
  type: "ReLU"
}
layer {
  bottom: "fc6_"
  top: "fc6_"
  name: "drop6"
  type: "Dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  bottom: "fc6_"
  top: "fc7_"
  name: "fc7_"
  type: "InnerProduct"
  inner_product_param {
    num_output: 2048
  weight_filler
  {type: "xavier"}
  bias_filler
  {
  	type: "constant"
  }
  }
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 1
  }
}
layer {
  bottom: "fc7_"
  top: "fc7_"
  name: "sigmoid7"
  type: "ReLU"
}
layer {
  bottom: "fc7_"
  top: "fc7_"
  name: "drop7"
  type: "Dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8_"
  bottom: "fc7_"
  top: "fc8_"
  type: "InnerProduct"
  inner_product_param {
    num_output: 1024
	weight_filler
	{
		type: "xavier"
	}
	bias_filler
	{
		type: "constant"
	}
  }
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 1
  }
}
layer {
  bottom: "fc8_"
  top: "sig1"
  name: "sig1"
  type: "ReLU"
}
#layer {
#  name: "fc9_"
#  bottom: "sig1"
#  top: "fc9_"
#  type: "InnerProduct"
#  inner_product_param {
#    num_output: 512
#	weight_filler
#	{
#		type: "xavier"
#	}
#	bias_filler
#	{
#		type: "constant"
#	}
#  }
#  param {
#    lr_mult: 1
#  }
#  param {
#    lr_mult: 1
#  }
#}
#layer {
#  bottom: "fc9_"
#  top: "sig2"
#  name: "sig2"
#  type: "ReLU"
#}
layer {
  name: "fc10_"
  bottom: "sig1"
  top: "fc10_"
  type: "InnerProduct"
  inner_product_param {
    num_output: 512
	weight_filler
	{
		type: "xavier"
	}
	bias_filler
	{
		type: "constant"
	}
  }
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 1
  }
}
layer {
  bottom: "fc10_"
  top: "sig3"
  name: "sig3"
  type: "ReLU"
}
layer {
  name: "fc11_"
  bottom: "sig3"
  top: "fc11_"
  type: "InnerProduct"
  inner_product_param {
    num_output: 99
	weight_filler
	{
		type: "xavier"
	}
	bias_filler
	{
		type: "constant"
	}
  }
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 1
  }
}
layer {
  name: "loss"
  type: "SigmoidCrossEntropyLoss"
  bottom: "fc11_"
  bottom: "label"
  top: "loss"
}
